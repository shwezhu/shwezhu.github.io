<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Regex on David&#39;s Blogs</title>
        <link>https://demo.stack.jimmycai.com/tags/regex/</link>
        <description>Recent content in Regex on David&#39;s Blogs</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Tue, 02 May 2023 23:30:28 +0000</lastBuildDate><atom:link href="https://demo.stack.jimmycai.com/tags/regex/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>正则表达式之关于&#39;(? … )&#39;的困惑</title>
        <link>https://demo.stack.jimmycai.com/p/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%B9%8B%E5%85%B3%E4%BA%8E-%E7%9A%84%E5%9B%B0%E6%83%91/</link>
        <pubDate>Tue, 02 May 2023 23:30:28 +0000</pubDate>
        
        <guid>https://demo.stack.jimmycai.com/p/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%B9%8B%E5%85%B3%E4%BA%8E-%E7%9A%84%E5%9B%B0%E6%83%91/</guid>
        <description>&lt;p&gt;最初想筛选以&lt;code&gt;sh&lt;/code&gt;结尾但前面没有&lt;code&gt;.&lt;/code&gt;的文件, 对应的Regex为&lt;code&gt;(?&amp;lt;!\.)sh$&lt;/code&gt;, 但是! 刚开始不知道&lt;code&gt;(?!)&lt;/code&gt;,&lt;code&gt;(?=)&lt;/code&gt;,&lt;code&gt;(?&amp;lt;!)&lt;/code&gt;这种写法规则, 就在想用逻辑与写出以&lt;code&gt;sh&lt;/code&gt;结尾的字符但不以&lt;code&gt;.sh&lt;/code&gt;结尾, 但这本身就矛盾啊, 以&lt;code&gt;.sh&lt;/code&gt;结尾本身就是以&lt;code&gt;sh&lt;/code&gt;结尾啊,,, 研究了俩小时, 太菜了,,,, 又快凌晨一点了,&lt;/p&gt;
&lt;p&gt;在&lt;a class=&#34;link&#34; href=&#34;https://stackoverflow.com/a/2973495/16317008&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;StackOverflow&lt;/a&gt;看到一个好的回答,&lt;/p&gt;
&lt;p&gt;Given the string &lt;code&gt;foobarbarfoo&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bar&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;?&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;bar&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;     finds the 1st bar &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;bar&amp;#34;&lt;/span&gt; which has &lt;span class=&#34;s2&#34;&gt;&amp;#34;bar&amp;#34;&lt;/span&gt; after it&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bar&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;?!bar&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;     finds the 2nd bar &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;bar&amp;#34;&lt;/span&gt; which does not have &lt;span class=&#34;s2&#34;&gt;&amp;#34;bar&amp;#34;&lt;/span&gt; after it&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;?&amp;lt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;foo&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;bar    finds the 1st bar &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;bar&amp;#34;&lt;/span&gt; which has &lt;span class=&#34;s2&#34;&gt;&amp;#34;foo&amp;#34;&lt;/span&gt; before it&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;?&amp;lt;!foo&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;bar    finds the 2nd bar &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;bar&amp;#34;&lt;/span&gt; which does not have &lt;span class=&#34;s2&#34;&gt;&amp;#34;foo&amp;#34;&lt;/span&gt; before it&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;You can also combine them:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;?&amp;lt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;foo&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;bar&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;?&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;bar&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;    finds the 1st bar &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;bar&amp;#34;&lt;/span&gt; with &lt;span class=&#34;s2&#34;&gt;&amp;#34;foo&amp;#34;&lt;/span&gt; before it and &lt;span class=&#34;s2&#34;&gt;&amp;#34;bar&amp;#34;&lt;/span&gt; after it&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;使用这种 lookaround 句型的时候要注意上面的写法, 即 &lt;code&gt;(?!bar)&lt;/code&gt; 就是用来指定某个单词后&lt;strong&gt;不含有&lt;/strong&gt;什么的, 还有一个重要的点如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In the meantime, if there is one thing you should remember, it is this: &lt;strong&gt;a lookahead or a lookbehind does not &amp;ldquo;consume&amp;rdquo; any characters on the string&lt;/strong&gt;. This means that after the lookahead or lookbehind&amp;rsquo;s closing parenthesis, the regex engine is left standing on the very same spot in the string from which it started looking: it hasn&amp;rsquo;t moved. From that position, then engine can start matching characters again.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;即这些Lookaround只是用来检查check的, 是个附加条件:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;printf&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;handle_test.go&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep -P &lt;span class=&#34;s1&#34;&gt;&amp;#39;test(?=.)go&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;凭直觉 &lt;code&gt;&#39;test(?=.)go&#39;&lt;/code&gt; 匹配的是含有 &lt;code&gt;test&lt;/code&gt; 且其后紧跟着 &lt;code&gt;.go&lt;/code&gt;, 可是 &lt;code&gt;&amp;quot;handle_test.go&amp;quot;&lt;/code&gt; 并不满足 &lt;code&gt;&#39;test(?=.)go&#39;&lt;/code&gt;,  因为&lt;code&gt;(?=.)&lt;/code&gt; 匹配到了 &lt;code&gt;.&lt;/code&gt; 并没有消耗掉它, 要这么写才行: &lt;code&gt;&#39;test(?=.).go&#39;&lt;/code&gt; ,但这样看着很奇怪 并不是这么用的, 其实直接写 &lt;code&gt;&#39;test(?=.go)&#39;&lt;/code&gt; 就好了,&lt;/p&gt;
&lt;p&gt;参考:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.rexegg.com/regex-disambiguation.html#lookarounds&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Advanced Regex Tutorial—Regex Syntax&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://stackoverflow.com/questions/2973436/regex-lookahead-lookbehind-and-atomic-groups&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;lookaround - Regex lookahead, lookbehind and atomic groups - Stack Overflow&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>grep不支持Negative Lookahead问题</title>
        <link>https://demo.stack.jimmycai.com/p/grep%E4%B8%8D%E6%94%AF%E6%8C%81negative-lookahead%E9%97%AE%E9%A2%98/</link>
        <pubDate>Tue, 02 May 2023 22:29:30 +0000</pubDate>
        
        <guid>https://demo.stack.jimmycai.com/p/grep%E4%B8%8D%E6%94%AF%E6%8C%81negative-lookahead%E9%97%AE%E9%A2%98/</guid>
        <description>&lt;p&gt;刚开始使用&lt;code&gt;printf &amp;quot;123\n24567\n8930\n234\n&amp;quot; | egrep &#39;(?&amp;lt;!2)3&#39;&lt;/code&gt;提示&lt;code&gt;egrep: repetition-operator operand invalid&lt;/code&gt;, 然后查到可以使用参数&lt;code&gt;-P&lt;/code&gt;, 如下:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;printf&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;123\n24567\n8930\n234\n&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep -P &lt;span class=&#34;s1&#34;&gt;&amp;#39;(?&amp;lt;!2)3&amp;#39;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;但是仍然报错和上面报错相同, 然后就考虑是不是版本问题,&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ grep --v
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;grep &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;BSD grep, GNU compatible&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; 2.6.0-FreeBSD
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;尝试更新,&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ brew upgrade grep
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Error: grep not installed
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后尝试安装,&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ brew install grep
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;All commands have been installed with the prefix &lt;span class=&#34;s2&#34;&gt;&amp;#34;g&amp;#34;&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;If you need to use these commands with their normal names, you
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;can add a &lt;span class=&#34;s2&#34;&gt;&amp;#34;gnubin&amp;#34;&lt;/span&gt; directory to your PATH from your bashrc like:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/opt/homebrew/opt/grep/libexec/gnubin:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PATH&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;安装成功, 然后根据提示往&lt;code&gt;.zshrc&lt;/code&gt;添加对应环境变量&lt;code&gt;PATH&lt;/code&gt;, 注意&lt;code&gt;$:PATH&lt;/code&gt;的含义(追加),&lt;/p&gt;
&lt;p&gt;查看版本,&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;grep --v
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;grep &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;GNU grep&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; 3.10
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Packaged by Homebrew
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Copyright &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;C&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2023&lt;/span&gt; Free Software Foundation, Inc.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;现在支持上面语法&lt;code&gt;grep -P &#39;(?&amp;lt;!2)3&#39; &lt;/code&gt;, 问题解决~&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Regex Basics</title>
        <link>https://demo.stack.jimmycai.com/p/regex-basics/</link>
        <pubDate>Mon, 01 May 2023 23:14:22 +0000</pubDate>
        
        <guid>https://demo.stack.jimmycai.com/p/regex-basics/</guid>
        <description>&lt;h2 id=&#34;1----&#34;&gt;
    &lt;a href=&#34;#1----&#34;&gt;#&lt;/a&gt;
    1. &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;
&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;code&gt;+&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;one occurrences of the preceding element&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;*&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;zero occurrence of the preceding element&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;?&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;zero or one occurrences of the preceding element&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;.&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches any single character (exclude newlines)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;2-b&#34;&gt;
    &lt;a href=&#34;#2-b&#34;&gt;#&lt;/a&gt;
    2. &lt;code&gt;\b&lt;/code&gt;
&lt;/h2&gt;&lt;p&gt;To match &amp;ldquo;port&amp;rdquo; and &amp;ldquo;ports&amp;rdquo; but not match &amp;ldquo;export&amp;rdquo;, &amp;ldquo;portable&amp;rdquo;, &amp;ldquo;important&amp;rdquo;, use \bports?\b. Here, \b indicates a boundary, where there cannot be other word characters on either side. Word characters refer to English letters, numbers and underscore &amp;ldquo;_&amp;rdquo;. So \bports?\b will match &amp;ldquo;port&amp;rdquo; or &amp;ldquo;ports&amp;rdquo; only if they appear as a full word by themselves, not as part of another word.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;printf&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;The port is...\nTo export it...\nThere are many ports...\nportable&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; egrep &lt;span class=&#34;s1&#34;&gt;&amp;#39;\bports?\b&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;The port is...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;There are many ports...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Please note that Bash generally uses &amp;ldquo;double quotes&amp;rdquo; to quote strings, in order to avoid potential misparsing, we should use &amp;lsquo;single quotes&amp;rsquo; when quoting any regular expressions.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You should always &lt;a class=&#34;link&#34; href=&#34;https://www.gnu.org/software/bash/manual/bash.html#Quoting&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;quote&lt;/a&gt; regular expressions for &lt;code&gt;grep&lt;/code&gt;&amp;ndash;and &lt;a class=&#34;link&#34; href=&#34;https://www.gnu.org/software/bash/manual/bash.html#Single-Quotes&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;single quotes&lt;/a&gt; are usually best. &lt;a class=&#34;link&#34; href=&#34;https://askubuntu.com/a/957504/1690738&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://askubuntu.com/a/957504/1690738&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;3-&#34;&gt;
    &lt;a href=&#34;#3-&#34;&gt;#&lt;/a&gt;
    3. &lt;code&gt;[]&lt;/code&gt;
&lt;/h2&gt;&lt;p&gt;A string of characters enclosed in square brackets (&lt;code&gt;[]&lt;/code&gt;) matches any &lt;strong&gt;one character&lt;/strong&gt; in that string. If the first character in the brackets is a caret (&lt;code&gt;^&lt;/code&gt;), it matches any character &lt;em&gt;except&lt;/em&gt; those in the string. For example, &lt;code&gt;[abc]&lt;/code&gt; matches a, b, or c, but not x, y, or z. However, &lt;code&gt;[^abc]&lt;/code&gt; matches x, y, or z, but not a, b, or c.&lt;/p&gt;
&lt;p&gt;A minus sign (-) within square brackets indicates a range of consecutive ASCII characters. For example, &lt;code&gt;[0-9]&lt;/code&gt; is the same as &lt;code&gt;[0123456789]&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If any special character, such as backslash (&lt;code&gt;\&lt;/code&gt;), asterisk (&lt;code&gt;*&lt;/code&gt;), or plus sign (&lt;code&gt;+&lt;/code&gt;), is immediately after the left square bracket, it doesn&amp;rsquo;t have its special meaning and is considered to be one of the characters to match.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Match&lt;/th&gt;
&lt;th&gt;Not match&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;[0-9]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1, 2, 3&lt;/td&gt;
&lt;td&gt;12, 01, 22&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;[a-zA-Z0-9_]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;a, E, 2, _&lt;/td&gt;
&lt;td&gt;ab, 56&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;END[.]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;END.&lt;/td&gt;
&lt;td&gt;END;   END DO&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[ \t\n]&lt;/code&gt;, &amp;ldquo;任何一个空白类字符&amp;rdquo;,  注意&lt;code&gt;[ \t\n]&lt;/code&gt;是前面故意有个空格,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[^ \t\n]&lt;/code&gt;, &amp;ldquo;任何一个非空白类字符&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;计数用, 表达 「前面的样版重复出现多少次」 的 quantifier:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{5}&lt;/code&gt; 重复 5 次&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{3,7}&lt;/code&gt; 重复 3 到 7 次&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{3,}&lt;/code&gt; 重复至少 3 次&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{0,}&lt;/code&gt;重复出现任意次, 包含 0 次&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{1,}&lt;/code&gt; 重复出现任意次, 至少 1 次&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;国内的手机号是11位, 所以要查手机号, 我们可以简单的查找大于等于11位数字的字符串, 下面用7位的举例子,&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;printf&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;12345\n12345678\n123\n234567\n1234567&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; egrep &lt;span class=&#34;s1&#34;&gt;&amp;#39;[0-9]{7}&amp;#39;&lt;/span&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;12345678&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;1234567&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果想要查找就是准确的7位的数字呢?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;printf&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;12345\n12345678\n123\n234567\n1234567&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; ggrep -E &lt;span class=&#34;s1&#34;&gt;&amp;#39;\b[0-9]{7}\b&amp;#39;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;1234567&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;4---&#34;&gt;
    &lt;a href=&#34;#4---&#34;&gt;#&lt;/a&gt;
    4. &lt;code&gt;$&lt;/code&gt; &amp;amp; &lt;code&gt;^&lt;/code&gt;
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;$&lt;/code&gt; The pattern &lt;code&gt;hello$&lt;/code&gt; will match the word &amp;ldquo;hello&amp;rdquo; only if it appears at the end of a line.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;printf&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;My name is Jack\nHi Jack, this is John\nYou and Jack will come..\ndfHelloJack&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; egrep &lt;span class=&#34;s1&#34;&gt;&amp;#39;Jack$&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;My name is Jack
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dfHelloJack
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;^&lt;/code&gt; Can be used to match the start of a line. For instance, the pattern &lt;code&gt;^Hello&lt;/code&gt; will match any line that begins with &amp;ldquo;Hello.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;For example, the pattern &lt;code&gt;^hello$&lt;/code&gt; will only match the exact string &amp;ldquo;hello&amp;rdquo; and not &amp;ldquo;hello world&amp;rdquo; or &amp;ldquo;say hello.&amp;rdquo;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;printf&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Hell 123\n123456\n123\n123 hello&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; egrep &lt;span class=&#34;s1&#34;&gt;&amp;#39;^\d+$&amp;#39;&lt;/span&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;123456&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;123&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;printf&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Hell 123\n123456\n123\n123 hello&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; egrep &lt;span class=&#34;s1&#34;&gt;&amp;#39;\d{3}&amp;#39;&lt;/span&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Hell &lt;span class=&#34;m&#34;&gt;123&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;123456&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;123&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;123&lt;/span&gt; hello
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;printf&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Hell 123\n123456\n123\n123 hello&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; egrep &lt;span class=&#34;s1&#34;&gt;&amp;#39;\b\d{3}\b&amp;#39;&lt;/span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Hell &lt;span class=&#34;m&#34;&gt;123&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;123&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;123&lt;/span&gt; hello
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;5-eg&#34;&gt;
    &lt;a href=&#34;#5-eg&#34;&gt;#&lt;/a&gt;
    5. e.g.
&lt;/h2&gt;&lt;p&gt;在一篇文章当中, 抓出所有 「看起来像是机场代码的字符串」 (例如 TPE 台北, KHH 高雄, LAX 洛杉矶, &amp;hellip; 等等): &lt;code&gt;\b[A-Z][A-Z][A-Z]\b&lt;/code&gt;。 这里的 &lt;code&gt;[A-Z]&lt;/code&gt; 是 [ABCDEFGHIJKLMNOPQRSTUVWXYZ] 的简写, 意思是 「任何一个大写字母」&lt;/p&gt;
&lt;p&gt;如何在一大片文本, 银行账号, 信用卡号&amp;hellip; 当中, 找出看来像是移动电话号码的字符串, 例如 0912345678 或是 0912-345678 或是 0912-345-678 之类的? &lt;code&gt;09\d\d-?\d\d\d-?\d\d\d&lt;/code&gt; 这里的&lt;code&gt; \d&lt;/code&gt; 是 [0-9] 的简写, 这又是 [0123456789] 的简写, 意思是 「任何一个数字字符」&lt;/p&gt;
&lt;p&gt;想要找一组数字 ip (例如 168.95.1.1 或 163.17.9.176 之类的) 印象中在某个文件内曾看过, 但既不记得精确的数字, 也不记得在那个文件看过, 该怎么办? 可以搜索 &lt;code&gt;\d+\.\d+\.\d+\.\d+&lt;/code&gt; 抓出所有数字 ip。 这里的&lt;code&gt; +&lt;/code&gt; 表示 「前面的东西, 可以重复出现 1 次, 2 次, 3 次, &amp;hellip; 任意次」。 因为 . 在 regexp 当中有特殊的意义: 「任何一个字符」; 但在这里我们就是要找 &amp;ldquo;.&amp;rdquo; 于是在前面加上 \ 以取消它的特殊意义。&lt;/p&gt;
&lt;p&gt;可以把一个文本文件里面的所有空白列都删掉吗? 这个 regexp 可以抓出所有空白列: &lt;code&gt;^\s*$&lt;/code&gt;。 在 regexp 最前面放一个 &lt;code&gt;^&lt;/code&gt; 表示您只对 「出现在一列之首」 的样版有兴趣; 在 regexp 的最后面放一个 &lt;code&gt;$&lt;/code&gt; 表示您只对 「出现在一列之尾」 的样版有兴趣。 &lt;code&gt;\s&lt;/code&gt; 是&lt;code&gt; [\t\n]&lt;/code&gt; 的简写, 意思是 「任何一个空白字符」 (包含空格, tab, 等等)。 &lt;code&gt;*&lt;/code&gt; 表示 「前面的东西, 可以重复出现 0 次, 1 次, 2 次, &amp;hellip; 任意次」。 这个样版翻译成中文, 就是 「从头到尾都是一片空白的那种列」。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;code&gt;\&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;\&lt;/code&gt; is used to escape special chars: &lt;code&gt;\*&lt;/code&gt;matches &lt;code&gt;*&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;[abc]&lt;/td&gt;
&lt;td&gt;any of a, b, or c&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[^abc]&lt;/td&gt;
&lt;td&gt;not a, b, or c&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[a-g]&lt;/td&gt;
&lt;td&gt;character between a &amp;amp; g&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[^adgf]&lt;/td&gt;
&lt;td&gt;代表不是a, d, g或f的字符&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 忽略大小写&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;printf&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello\nHeal\ntold\nhello&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; egrep &lt;span class=&#34;s1&#34;&gt;&amp;#39;(?i)LL&amp;#39;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Hello
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hello
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 找出带后缀的文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ls /etc/ &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; egrep &lt;span class=&#34;s1&#34;&gt;&amp;#39;\.\w+$&amp;#39;&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;References:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cyut.edu.tw/~ckhung/b/re/intro.php&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Regexp 是什么东东?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://digitalfortress.tech/tips/top-15-commonly-used-regex/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Top 15 Commonly Used Regex - Digital Fortress&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cyut.edu.tw/~ckhung/b/re/rules.php&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Perl 常用的 regexp 规则列表&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
